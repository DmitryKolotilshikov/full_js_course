/* 
üß≤ –ó–∞–¥–∞—á–∞: –ú–∞–≥–∞–∑–∏–Ω –∏ –∫–æ—Ä–∑–∏–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤ üß≤

–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Product, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä –≤ –º–∞–≥–∞–∑–∏–Ω–µ, –∏ –∫–ª–∞—Å—Å Cart, 
–∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ—Ä–∑–∏–Ω–æ–π –ø–æ–∫—É–ø–æ–∫. –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:

–ö–ª–∞—Å—Å Product –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞:

1) name (–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞),
2) price (—Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞).

–ö–ª–∞—Å—Å Cart –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –º–µ—Ç–æ–¥—ã:

1) addProduct(product) ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É.
2) removeProduct(productName) ‚Äî —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é.
3) getTotalPrice() ‚Äî –≤–µ—Ä–Ω—É—Ç—å –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ.
4) listProducts() ‚Äî –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ.
*/

// --------------------------- –†–µ—à–µ–Ω–∏–µ --------------------------------

const log = console.log;

class Product {
    constructor(name, price) {
        this.name = name;
        this.price = price;
    }
}

class Cart {
    constructor() {
        this.products = []; // –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    }

    // –ú–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
    addProduct(product) {
        this.products.push(product);
        log(`${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É.`);
    }

    // –ú–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    removeProduct(productName) {
        const newProducts = this.products.filter((product) => product.name !== productName);

        if (newProducts.length !== this.products.length) {
            this.products = newProducts;

            log(`${productName} —É–¥–∞–ª—ë–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã! ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è`);
            return;
        }

        log(`–¢–æ–≤–∞—Ä —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "${productName}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω–µ!`);
    }

    // –ú–µ—Ç–æ–¥ –ø–æ–¥—Å—á—ë—Ç–∞ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    getTotalPrice() {
        return this.products.reduce((total, product) => total + product.price, 0);
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
    listProducts() {
        if (this.products.length === 0) {
            log('üò¨ –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! üò¨');
            return;
        }
        log('--- –¢–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ: ---');

        this.products.forEach((product, index) => {
            log(`${index + 1}. ${product.name} ‚Äî ${product.price} —Ä—É–±.`);
        });
    }
}

const bread = new Product('–•–ª–µ–±', 30);
const apple = new Product('–Ø–±–ª–æ–∫–æ', 50);
const milk = new Product('–ú–æ–ª–æ–∫–æ', 60);

const cart = new Cart();

cart.addProduct(bread);
cart.addProduct(bread);
cart.addProduct(apple);
cart.addProduct(milk);

cart.listProducts();

log(`–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${cart.getTotalPrice()} —Ä—É–±.`);

cart.removeProduct('–•–ª–µ–±');
cart.removeProduct('–•–ª–µ–±1111');

cart.listProducts();

log(`–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: ${cart.getTotalPrice()} —Ä—É–±.`);
