// DOM - —Å–æ–∑–¥–∞–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

const log = console.log;
const dir = console.dir;

// –ú–µ—Ç–æ–¥—ã –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
// querySelector - —Å–∞–º—ã–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π, —É–¥–æ–±–Ω—ã–π –∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–π
const p = document.querySelector("p"); // c–∞–º—ã–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π
log(p);
dir(p);

const allP = document.querySelectorAll("p");
log(allP);
log(Array.from(allP));

const lastText = document.querySelector(".last-text");
// const lastText = document.querySelector("p[class='last-text']");
// const lastText = document.querySelector("[class='last-text']");
dir(lastText);

// const firstText = document.querySelector("#first-text");
// const firstText = document.getElementById("first-text");
// dir(firstText);

const wrapper = document.querySelector(".wrapper");
log(wrapper);

// const firstText = wrapper.getElementById("first-text"); // –æ—à–∏–±–∫–∞! getElementById –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ document

// querySelector –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–∞—Ö –Ω–µ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ document
const firstText = wrapper.querySelector("#first-text");
dir(firstText);

// üíé---------------üíé----------------üíé
// getElementsBy* - –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –∂–∏–≤—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –Ω–æ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å querySelector
const allTexts = document.getElementsByTagName("p");
dir(allTexts);

// allTexts.forEach(element => { // –æ—à–∏–±–∫–∞
//     log(element)
// });

allP.forEach(element => { // allP - NodeList (–º–∞—Å—Å–∏–≤ –Ω–∞ –º–∏–Ω–∏–º–∞–ª–∫–∞—Ö)
    log(element);
});
Array.from(allP).forEach(element => { // Array.from(allP) - –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
    log(element);
});

// üíé---------------üíé----------------üíé
log(wrapper.textContent); // —Å—Ç—Ä–æ–∫–∞ —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–º –≤–Ω—É—Ç—Ä–∏
log(wrapper.innerHTML); // —Å—Ç—Ä–æ–∫–∞ html —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –≤–Ω—É—Ç—Ä–∏
log(wrapper.outerHTML); // —Å—Ç—Ä–æ–∫–∞ html —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º + —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç wrapper

// wrapper.textContent = "hello";
// log(wrapper);

// wrapper.innerHTML = "<h2>text from JavaScript</h2>";
// wrapper.innerHTML += "<h2>text from JavaScript</h2>";
// log(wrapper);

wrapper.prepend("text with prepend"); // –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
wrapper.append("text with append"); // –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –ø–æ—Å–ª–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

wrapper.before("text with before"); // –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç —Å–Ω–∞—Ä—É–∂–∏ –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
wrapper.after("text with after"); // –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç —Å–Ω–∞—Ä—É–∂–∏ –ø–æ—Å–ª–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

// wrapper.append("<h2>text with append</h2>"); // –¥–æ–±–∞–≤–∏—Ç—Å—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞

const h2 = document.createElement("h2"); // —Å–æ–∑–¥–∞–ª–∏ —ç–ª–µ–º–µ–Ω—Ç h2
h2.textContent = "–Ω–∞—à —Å–æ–∑–¥–∞–Ω–Ω—ã–π h2"; // –¥–æ–±–∞–≤–∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—É –∫–æ–Ω—Ç–µ–Ω—Ç

wrapper.append(h2);
log(wrapper);

// lastText.innerHTML = ""; // —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –≤–Ω—É—Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
lastText.remove(); // —É–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç

// üíé---------------üíé----------------üíé
// insertAdjacentHTML/Text/Element

const container = document.querySelector(".container");
const h3 = document.createElement("h3");
h3.textContent = "–Ω–∞—à —Å–æ–∑–¥–∞–Ω–Ω—ã–π h3";

// -- beforebegin, afterbegin, beforeend, afterend --
// container.insertAdjacentElement("afterbegin", h3);

const copiedContainer = container;

container.insertAdjacentText("beforebegin", "1) —Ç–µ–∫—Å—Ç –Ω–∞–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º");
container.insertAdjacentText("afterbegin", "2) —Ç–µ–∫—Å—Ç –≤–Ω–∞—á–∞–ª–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ");
container.insertAdjacentText("beforeend", "3) —Ç–µ–∫—Å—Ç –≤–∫–æ–Ω—Ü–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ");
container.insertAdjacentText("afterend", "4) —Ç–µ–∫—Å—Ç –ø–æ–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º");

// insertAdjacentHTML - —Å–∞–º—ã–π —É–¥–æ–±–Ω—ã–π –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π
container.insertAdjacentHTML("afterbegin", `
    <hr>
    <button>click me</button>
    <hr>
`);

// üíé---------------üíé----------------üíé

log(copiedContainer === container);
log(copiedContainer.textContent, container.textContent);

// cloneNode - –∫–ª–æ–Ω–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç
// –µ—Å–ª–∏ true —Å–æ–∑–¥–∞—ë—Ç—Å—è ¬´–≥–ª—É–±–æ–∫–∏–π¬ª –∫–ª–æ–Ω —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–æ –≤—Å–µ–º–∏ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ –∏ –¥–æ—á–µ—Ä–Ω–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
// –µ—Å–ª–∏ false,—Ç–æ –∫–ª–æ–Ω –±—É–¥–µ—Ç –±–µ–∑ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
const deepCopiedContainer = container.cloneNode(true); 

log(deepCopiedContainer === container);